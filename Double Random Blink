#include <Keypad.h>

const byte rows = 5; 
const byte cols = 5; 

char keys[rows][cols] = {
  {'1','2','3','4','5'},
  {'6','7','8','9','A'},
  {'B','C','D','E','F'},
  {'G','H','I','J','K'},
  {'L','M','N','O','P'}
};

byte rowPins[rows] = {40, 39 , 38 , 37 , 36 }; 
byte colPins[cols] = { 35 , 34 ,33 , 32 , 31 }; 

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, rows, cols );

int Led_Rows[] = { 2 , 3 , 4  ,5 ,6 } ;
int Led_Columns[] = { 7 , 8 , 9 , 10 , 11 };
int Loop_Count = 5 ;
int first_key_pressed = 0;
int second_key_pressed = 0;
char first_in_position = '1';
char second_in_position = '5';
int Wait_Time = 500 ; 
int i = 0 ;
int j = 0 ;
int x = 0 ;
int y = 0 ; 
int c = 0 ;

void setup() {
  Serial.begin(9600);
  randomSeed(analogRead(A0)); 
  for(int i=0;i<5;i++){
    pinMode(Led_Rows[i], OUTPUT);
    digitalWrite(Led_Rows[i],LOW);
    pinMode(Led_Columns[i], OUTPUT);
    digitalWrite(Led_Columns[i],HIGH);
  }
   Led_Glow(0,0);
  delay(Wait_Time);
  Led_Glow(0,4);
  delay(Wait_Time);
}

void Start(){
  Led_Glow(0,0);
  delay(Wait_Time);
  Led_Glow(0,4);
  delay(Wait_Time);

}

void Led_Glow( int a , int b ){
  digitalWrite(Led_Rows[a],HIGH);
  digitalWrite(Led_Columns[b],LOW); 
}

void Led_Dim( int a ,int b ){
  digitalWrite(Led_Rows[a],HIGH);
  digitalWrite(Led_Columns[b],HIGH);
} 

void restore( ){
  for(int i=0;i<5;i++){
    digitalWrite(Led_Rows[i],LOW);
    digitalWrite(Led_Columns[i],HIGH);
  }
  
}

/*void RandomNumberGeneration() {
  Serial.println("saravana");
    char r[2] ;
    int k = 0 , i = 0 ;
  for( int j = 0 ; j < 2 ; j++ ){
     i = 0 ;
   do
   {
    int a = random(1,25);
    char c;
    if( a % 2 == 0 || (a > 5 && a < 11)|| (a > 15 && a < 21)){
        
    }else{
    if(a > 9){
      c = a + 55;
    } else {
      c = a;
      }
      r[k] = c ;
      k++;
      i = 1 ;
    }
  }while( i == 0 );
  }
    delay(2000);
    for( i = 0 ; i < 2 ; i++ ){
      Serial.print(r[i]);
      Serial.println(" " );
    }
    //return r;
}*/


void check_for_position (char c)
{
  if (first_in_position == c)
  {
    first_key_pressed = 1;
  }
  else if (second_in_position == c)
  {
    second_key_pressed = 1;
  }
}

void set_next_expected_leds()
{
    first_key_pressed = 0;
    second_key_pressed = 0;
  if (first_in_position == '1') 
  {
    first_in_position = 'L';
    second_in_position = 'P';
    restore();
    Led_Glow(4,0);
    delay(Wait_Time);
    Led_Glow(4,4);
    delay(Wait_Time);
  } else if (first_in_position == 'L')
  {
    first_in_position = 'B';
    second_in_position = 'D';
    restore();
    Led_Glow(2, 0);
    delay(Wait_Time);
    Led_Glow(2 , 2);
    delay(Wait_Time);
  }else if (first_in_position == 'B')
  {
    first_in_position = 'N';
    second_in_position = 'P';
    restore();
    Led_Glow(4,2);
    delay(Wait_Time);
    Led_Glow(4,4);
    delay(Wait_Time);
  }else if (first_in_position == 'N') 
  {
    first_in_position = '3';
    second_in_position = '5';
    restore();
    Led_Glow(0,2);
    delay(Wait_Time);
    Led_Glow(0,4);
    delay(Wait_Time);
  }
  /*else if (first_in_position == 'D')
  {
    first_in_position = 'B';
    second_in_position = 'L';
    Led_Glow(2,0);
    delay(Wait_Time);
    Led_Glow(4,0);
    delay(Wait_Time);
  }else if (first_in_position == 'B')
  {
    first_in_position = 'L';
    second_in_position = 'N';
    Led_Glow(4,0);
    delay(Wait_Time);
    Led_Glow(4,2);
    delay(Wait_Time);
  }else if (first_in_position == 'L')
    {
    first_in_position = 'N';
    second_in_position = 'P';
    Led_Glow(4,2);
    delay(Wait_Time);
    Led_Glow(4,4);
    delay(Wait_Time);
  }*/

}


void loop() { 
  char key = keypad.getKey();
  if(key == first_in_position || key == second_in_position){
   switch (key)
   {
    case '1':
      check_for_position('1');
      Led_Dim(0,0);
      delay(Wait_Time);
      break;

    case '3':
      check_for_position('3');
      Led_Dim(0, 2);
      delay(Wait_Time);
      break;

    case '5':
      check_for_position('5');
      Led_Dim(0,4);
      delay(Wait_Time);
      break;

    case 'F':
      check_for_position('F');
      Led_Dim(4,4);
      delay(Wait_Time);
      break;

    case 'D':
      check_for_position('D');
      Led_Dim(2,2);
      delay(Wait_Time);
      break;

    case 'B':
      check_for_position('B');
      Led_Dim(2,0);
      delay(Wait_Time);
      break;

    case 'L':
      check_for_position('L');
      Led_Dim(4,0);
      delay(Wait_Time);
      break;

    case 'N':
      check_for_position('N');
      Led_Dim(4,2);
      delay(Wait_Time);
      break;

    case 'P':
      check_for_position('P');
      Led_Dim(4,4);
      delay(Wait_Time);
      break;
    }
  }
   if(first_key_pressed == 1 && second_key_pressed == 1) 
   {
      set_next_expected_leds();
   }
}
